# kubectl get deployments.apps web-app -o yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
  creationTimestamp: "2024-11-20T10:32:43Z"
  generation: 3
  labels:
    app: web-app
  name: web-app
  namespace: default
  resourceVersion: "23032"
  uid: 8e8947e4-3484-466e-9170-05d6951b8366
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: web-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2024-11-20T12:39:01+02:00"
      creationTimestamp: null
      labels:
        app: web-app
    spec:
      containers:
      - image: amirn88/my-nginx_new:latest
        imagePullPolicy: Always
        name: my-nginx-new
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-11-20T10:32:43Z"
    lastUpdateTime: "2024-11-20T10:39:04Z"
    message: ReplicaSet "web-app-57468c7468" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2024-11-21T09:36:36Z"
    lastUpdateTime: "2024-11-21T09:36:36Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1

